/**
 * Project Euler Problem 2
 * Each new term in the Fibonacci sequence is generated by adding
 * previous two terms. By starting with 1 and 2, the first 10 terms
 * will be
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do 
 * not exceed four million, find the sum of the even-valued terms
 *  
 * @author anupkhadka
 */

package projecteuler;

public class P2 {
	/** 
     * Returns fibonacci number for n 
     * @param n  - number who fibonacci value is requested
	 * @return fibonnacci value of n
	 */
	private static int fib(int n) {
		int a, b, i, fibVal;
		a = 0; 
		b = 1;
		fibVal = b;

		if(n <= 1) {
			return n;
		}

		for(i = 2; i <= n; i++) {
			fibVal = a + b;
			a = b;
			b = fibVal;
		}

		return fibVal;
	}

	public static void main(String args[]) {
		int answer = 0, fibVal = 0, i = 1, n = 4000000;
		long start, end;
		
		start = System.currentTimeMillis();

		while((fibVal = fib(i++)) <= n) {
			if(fibVal % 2 == 0) {
				answer += fibVal;
			}
		}
		
		end = System.currentTimeMillis();
		System.out.println("Answer    : "+ answer);	
		System.out.println("Time (ms) : "+ (end-start));	
	}
}
